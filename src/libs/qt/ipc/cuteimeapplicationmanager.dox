/*!
    \class CuteimeApplicationManager
    \brief CuteimeApplicationManager manages general infomation.
 */

/*!
    \property CuteimeApplicationManager::applicationName
    \brief Application Name

    \li [read]   QString applicationName() const
    \li [write]  void setApplicationName(const QString &applicationName)
    \li [notify] applicationNameChanged(const QString &applicationName)
 */

/*!
    \property CuteimeApplicationManager::organizationName
    \brief Organization Name

    \li [read]   QString organizationName() const
    \li [write]  void setOrganizationName(const QString &organizationName)
    \li [notify] organizationNameChanged(const QString &organizationName)
 */

/*!
    \property CuteimeApplicationManager::displayLanguage
    \brief Display Language

    \li [read]   QString displayLanguage() const
    \li [write]  void setDisplayLanguage(const QString &displayLanguage)
    \li [notify] displayLanguageChanged(const QString &displayLanguage)
 */

/*!
    \property CuteimeApplicationManager::focus
    \brief wheather input method has a focus widget

    \li [read]   bool focus() const
    \li [write]  void setFocus(bool focus)
    \li [notify] focusChanged(bool focus)
 */

/*!
    \property CuteimeApplicationManager::window
    \brief window id of focus widget

    \li [read]   qulonglong window() const
    \li [write]  void setWindow(qulonglong window)
    \li [notify] windowChanged(qulonglong window)
 */

/*!
    \property CuteimeApplicationManager::composing
    \brief returns if the input method is composing

    \li [read]   bool composing() const
    \li [write]  void setComposing(bool composing)
    \li [notify] composingChanged(bool composing)
 */

/*!
    \property CuteimeApplicationManager::inputLanguage
    \brief Input Language

    \li [read]   QString inputLanguage() const
    \li [write]  void setInputLanguage(const QString &inputLanguage)
    \li [notify] inputLanguageChanged(const QString &inputLanguage)
 */

/*!
    \property CuteimeApplicationManager::currentIcon
    \brief Current Icon

    \li [read]   QIcon currentIcon() const
    \li [write]  void setCurrentIcon(const QIcon &currentIcon)
    \li [notify] currentIconChanged(const QIcon &currentIcon)
 */


/*!
    \property CuteimeApplicationManager::currentEngine
    \brief Current Engine

    \li [read]   QString currentEngine() const
    \li [write]  void setCurrentEngine(const QString &currentEngine)
    \li [notify] currentEngineChanged(const QString &currentEngine)
 */

/*!
    \enum CuteimeApplicationManager::ActionType
    \brief Application wide action entries
 */

/*!
    \var CuteimeApplicationManager::Reset
    \brief to reset
 */

/*!
    \var CuteimeApplicationManager::ShowDictionary
    \brief to show dictionary window
 */

/*!
    \var CuteimeApplicationManager::ShowSettings
    \brief to show settings dialog
 */

/*!
    \var CuteimeApplicationManager::ShowAboutCuteime
    \brief to show about cuteime information
 */

/*!
    \fn CuteimeApplicationManager::CuteimeApplicationManager(QObject *parent = 0, Type type = Client)
    \brief Constructor
 */


/*!
    \fn CuteimeApplicationManager::~CuteimeApplicationManager()
    \brief Destructor
 */

/*!
    \fn void CuteimeApplicationManager::exec(int action)
    \brief Send request for \a action

    Call this method in order to execute an action. triggered() will be emitted.

    \sa void CuteimeApplicationManager::triggered(int action)
 */

/*!
    \fn void CuteimeApplicationManager::triggered(int action)
    \brief Request for \a action

    This signal is emitted after you call exec().

    \sa void CuteimeApplicationManager::exec(int action)
 */

/*!
    \fn void CuteimeApplicationManager::settingsUpdate(const QString &name)
    \brief Send request to update settings for \a name

    Call this method in order to notify settings for \a name is updated. settingsUpdated() will be emitted.

    \sa void CuteimeApplicationManager::settingsUpdated(const QString &name);
 */

/*!
    \fn void CuteimeApplicationManager::settingsUpdated(const QString &name)
    \brief Update notification for settings named \a name

    This signal is emitted after you call settingsUpdate().

    \sa bool CuteimeApplicationManager::settingsUpdate(const QString &name)
 */
